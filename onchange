#!/bin/sh


interval=500
while getopts "r:c:i:fj" flag
do
  case $flag in
    c) cmd=$OPTARG ;;
    f) flush=1 ;;
    j) job=1 ;;
    r)
      if [ "$(echo "$OPTARG" | cut -b 1)" != ':' ]
      then watch="echo $OPTARG"
      else watch=$(echo "$OPTARG" | cut -b 2-)
      fi
      ;;
    i)
      i=$(printf "%d" "$OPTARG" 2>/dev/null)
      if [ "$i" -gt 0 ]
      then interval=$OPTARG
      else echo "$0: flag -i interval must be greater than 0" >&2 && exit
      fi
      ;;
    *) echo "$0: unknown flag '-$flag'" >&2 && exit ;;
  esac
done

[ -z "$watch" ] && echo "$0: flag -r resource is mandatory" >&2
[ -z "$cmd" ] && echo "$0: flag -c command is mandatory" >&2
{ [ -z "$cmd" ] || [ -z "$watch" ]; } && exit


killjobs() {
  pids=$(jobs -p)
  [ -n "$pids" ] && for p in $pids; do
    echo "> kill $p"
    kill "$p"
  done
}

getstat() { ls -lR --time-style=full-iso $(eval "$watch") | tr '\n' ' '; }

run() {
  [ "$flush" ] && printf '\033[2J\033[H'
  sleep .1
  if [ -n "$job" ]
  then
    killjobs
    eval "$cmd" & jobid=$!
    printf "\33[999D%s\n[%s]> %s" "$(date +'%F %T')" "$jobid" "$cmd"
  else
    printf "\33[999D%s\n> %s" "$(date +'%F %T')" "$cmd"
    eval "$cmd"
  fi
  echo
}

run
while true
do
  stat=$(getstat)
  sleep $((interval/1000)).$((interval%1000))
  newstat=$(getstat)
  [ "$newstat" != "$stat" ] && run
done
